<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.glaf.core.mapper.IdentityMgmtMapper">

	<resultMap id="sysRoleResultMap" type="com.glaf.core.identity.impl.RoleImpl">
		<id property="roleId" column="ID" jdbcType="VARCHAR" />
		<result property="code" column="CODE" jdbcType="VARCHAR" />
		<result property="name" column="ROLENAME" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap id="sysUserResultMap" type="com.glaf.core.identity.impl.UserImpl">
		<id property="actorId" column="USERID" jdbcType="VARCHAR" />
		<result property="name" column="USERNAME" jdbcType="VARCHAR" />
		<result property="organizationId" column="ORGANIZATIONID"
			jdbcType="BIGINT" />
		<result property="mail" column="EMAIL" jdbcType="VARCHAR" />
		<result property="mobile" column="MOBILE" jdbcType="VARCHAR" />
		<result property="accountType" column="ACCOUNTTYPE" jdbcType="INTEGER" />
		<result property="tenantId" column="TENANTID" jdbcType="VARCHAR" />
		<result property="userType" column="USERTYPE" jdbcType="INTEGER" />
		<result property="token" column="TOKEN" jdbcType="VARCHAR" />
	</resultMap>


	<resultMap id="groupResultMap" type="com.glaf.core.identity.impl.GroupImpl">
		<id property="groupId" column="GROUPID" jdbcType="VARCHAR" />
		<result property="name" column="NAME" jdbcType="VARCHAR" />
		<result property="code" column="CODE" jdbcType="VARCHAR" />
		<result property="type" column="TYPE" jdbcType="VARCHAR" />
		<result property="sort" column="SORTNO" jdbcType="INTEGER" />
		<result property="tenantId" column="TENANTID" jdbcType="VARCHAR" />
	</resultMap>


	<resultMap id="sysOrganizationResultMap"
		type="com.glaf.base.modules.sys.model.SysOrganization">
		<id property="id" column="ID" jdbcType="BIGINT" />
		<result property="name" column="NAME" jdbcType="VARCHAR" />
		<result property="description" column="ORG_DESC" jdbcType="VARCHAR" />
		<result property="sort" column="SORTNO" jdbcType="INTEGER" />
		<result property="no" column="ORG_NO" jdbcType="VARCHAR" />
		<result property="code" column="CODE" jdbcType="VARCHAR" />
		<result property="code2" column="CODE2" jdbcType="VARCHAR" />
		<result property="discriminator" column="DISCRIMINATOR"
			jdbcType="VARCHAR" />
		<result property="icon" column="ICON" jdbcType="VARCHAR" />
		<result property="iconCls" column="ICONCLS" jdbcType="VARCHAR" />
		<result property="level" column="LEVEL" jdbcType="INTEGER" />
		<result property="fincode" column="FINCODE" jdbcType="VARCHAR" />
		<result property="address" column="ADDRESS" jdbcType="VARCHAR" />
		<result property="telphone" column="TELPHONE" jdbcType="VARCHAR" />
		<result property="principal" column="PRINCIPAL" jdbcType="VARCHAR" />
		<result property="parentId" column="PARENTID" jdbcType="BIGINT" />
		<result property="treeId" column="TREEID" jdbcType="VARCHAR" />
		<result property="locked" column="LOCKED" jdbcType="INTEGER" />
		<result property="type" column="TYPE" jdbcType="VARCHAR" />
		<result property="url" column="URL" jdbcType="VARCHAR" />
		<result property="createBy" column="CREATEBY" jdbcType="VARCHAR" />
		<result property="createTime" column="CREATETIME" jdbcType="TIMESTAMP" />
		<result property="updateBy" column="UPDATEBY" jdbcType="VARCHAR" />
		<result property="updateDate" column="UPDATEDATE" jdbcType="TIMESTAMP" />
		<result property="deleteFlag" column="DELETEFLAG" jdbcType="INTEGER" />
		<result property="deleteTime" column="DELETETIME" jdbcType="TIMESTAMP" />
	</resultMap>


	<resultMap id="sysTenantResultMap" type="com.glaf.core.identity.impl.TenantImpl">
		<id property="id" column="ID_" jdbcType="BIGINT" />
		<result property="name" column="NAME_" jdbcType="VARCHAR" />
		<result property="tenantId" column="TENANTID_" jdbcType="VARCHAR" />
		<result property="tenantType" column="TENANTTYPE_" jdbcType="INTEGER" />
		<result property="type" column="TYPE_" jdbcType="VARCHAR" />
		<result property="databaseId" column="DATABASEID_" jdbcType="BIGINT" />
		<result property="limit" column="LIMIT_" jdbcType="INTEGER" />
		<result property="locked" column="LOCKED_" jdbcType="INTEGER" />
	</resultMap>


	<resultMap id="baseTreeResultMap" type="com.glaf.core.base.BaseTree">
		<id property="id" column="ID" jdbcType="BIGINT" />
		<result property="parentId" column="PARENTID" jdbcType="BIGINT" />
		<result property="name" column="NAME" jdbcType="VARCHAR" />
		<result property="desc" column="NODEDESC" jdbcType="VARCHAR" />
		<result property="sort" column="SORTNO" jdbcType="INTEGER" />
		<result property="code" column="CODE" jdbcType="VARCHAR" />
		<result property="icon" column="ICON" jdbcType="VARCHAR" />
		<result property="iconCls" column="ICONCLS" jdbcType="VARCHAR" />
		<result property="url" column="URL" jdbcType="VARCHAR" />
		<result property="locked" column="LOCKED" jdbcType="INTEGER" />
	</resultMap>


	<select id="getAgents" resultType="com.glaf.core.identity.impl.AgentImpl"
		parameterType="string">

		select ASSIGNFROM_ as assignFrom, ASSIGNTO_ as assignTo,
		OBJECTID_ as objectId, OBJECTVALUE_ as objectValue,
		PROCESSNAME_ as
		processName, TASKNAME_ as taskName,
		AGENTTYPE_ as agentType, STARTDATE_
		as startDate,
		ENDDATE_ as endDate
		from sys_agent
		where ASSIGNTO_ =
		#{assignTo}

	</select>


	<insert id="insertSysTree" parameterType="com.glaf.core.base.BaseTree">
		insert into SYS_TREE
		<trim prefix="(" suffix=")" suffixOverrides=",">
			ID
			<if test="parentId != null">
				,PARENTID
			</if>
			<if test="name != null">
				,NAME
			</if>
			<if test="desc != null">
				,NODEDESC
			</if>
			<if test="discriminator != null">
				,DISCRIMINATOR
			</if>
			<if test="treeId != null">
				,TREEID
			</if>
			<if test="sort != null">
				,SORTNO
			</if>
			<if test="code != null">
				,CODE
			</if>
			<if test="icon != null">
				,ICON
			</if>
			<if test="iconCls != null">
				,ICONCLS
			</if>
			<if test="url != null">
				,URL
			</if>
			<if test="locked != null">
				,LOCKED
			</if>
			<if test="createDate != null">
				,CREATEDATE
			</if>
			<if test="createBy != null">
				,CREATEBY
			</if>
			<if test="updateBy != null">
				,UPDATEBY
			</if>
			<if test="updateDate != null">
				,UPDATEDATE
			</if>
		</trim>

		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			#{id, jdbcType=BIGINT}

			<if test="parentId != null">
				,#{parentId, jdbcType=BIGINT}
			</if>
			<if test="name != null">
				,#{name, jdbcType=VARCHAR}
			</if>
			<if test="desc != null">
				,#{desc, jdbcType=VARCHAR}
			</if>
			<if test="discriminator != null">
				,#{discriminator, jdbcType=VARCHAR}
			</if>
			<if test="treeId != null">
				,#{treeId, jdbcType=VARCHAR}
			</if>
			<if test="sort != null">
				,#{sort, jdbcType=INTEGER}
			</if>
			<if test="code != null">
				,#{code, jdbcType=VARCHAR}
			</if>
			<if test="icon != null">
				,#{icon, jdbcType=VARCHAR}
			</if>
			<if test="iconCls != null">
				,#{iconCls, jdbcType=VARCHAR}
			</if>
			<if test="url != null">
				,#{url, jdbcType=VARCHAR}
			</if>
			<if test="locked != null">
				,#{locked, jdbcType=INTEGER}
			</if>
			<if test="createDate != null">
				,#{createDate, jdbcType=TIMESTAMP}
			</if>
			<if test="createBy != null">
				,#{createBy, jdbcType=VARCHAR}
			</if>
			<if test="updateBy != null">
				,#{updateBy, jdbcType=VARCHAR}
			</if>
			<if test="updateDate != null">
				,#{updateDate, jdbcType=TIMESTAMP}
			</if>
		</trim>
	</insert>


	<update id="updateSysTree" parameterType="com.glaf.core.base.BaseTree">
		update SYS_TREE
		set
		<trim prefix="" suffix="" suffixOverrides=",">
			<if test="parentId != null">
				PARENTID = #{parentId, jdbcType=BIGINT},
			</if>
			<if test="name != null">
				NAME = #{name, jdbcType=VARCHAR},
			</if>
			<if test="desc != null">
				NODEDESC = #{desc, jdbcType=VARCHAR},
			</if>
			<if test="discriminator != null">
				DISCRIMINATOR = #{discriminator, jdbcType=VARCHAR},
			</if>
			<if test="treeId != null">
				TREEID = #{treeId, jdbcType=VARCHAR},
			</if>
			<if test="sort != null">
				SORTNO = #{sort, jdbcType=INTEGER},
			</if>
			<if test="code != null">
				CODE = #{code, jdbcType=VARCHAR},
			</if>
			<if test="icon != null">
				ICON = #{icon, jdbcType=VARCHAR},
			</if>
			<if test="iconCls != null">
				ICONCLS = #{iconCls, jdbcType=VARCHAR},
			</if>
			<if test="url != null">
				URL = #{url, jdbcType=VARCHAR},
			</if>
			<if test="locked != null">
				LOCKED = #{locked, jdbcType=INTEGER},
			</if>
			<if test="updateBy != null">
				UPDATEBY = #{updateBy, jdbcType=VARCHAR},
			</if>
			<if test="updateDate != null">
				UPDATEDATE = #{updateDate, jdbcType=TIMESTAMP},
			</if>
		</trim>
		where
		ID = #{id, jdbcType=BIGINT}

	</update>


	<select id="getTreeModelById" parameterType="long" resultMap="baseTreeResultMap">
		select * from SYS_TREE where ID = #{id}
	</select>


	<select id="getTreeModelByCode" parameterType="string"
		resultMap="baseTreeResultMap">
		select * from SYS_TREE where CODE = #{code}
	</select>


	<select id="getChildrenTreeModels" parameterType="long"
		resultMap="baseTreeResultMap">
		select * from SYS_TREE where PARENTID = #{parentId} and
		DELETEFLAG = 0
	</select>


	<select id="getTreeModels" parameterType="com.glaf.core.query.TreeModelQuery"
		resultMap="baseTreeResultMap">

		select E.* from SYS_TREE E

		<where>
			1 = 1

			and E.DELETEFLAG = 0

			<if test="parentId != null">
				and E.PARENTID = #{parentId}
			</if>

			<if test="parentIds != null and parentIds.size != 0">
				and E.PARENTID IN
				<foreach item="x_parentId" index="index" collection="parentIds"
					open="(" separator="," close=")">
					#{x_parentId}
				</foreach>
			</if>

			<if test="discriminator != null and discriminator != '' ">
				and E.DISCRIMINATOR = #{discriminator}
			</if>

			<if test="name != null and name != '' ">
				and E.NAME = #{name}
			</if>

			<if test="nameLike != null and nameLike != '' ">
				and E.NAME like #{nameLike}
			</if>

			<if test="descLike != null and descLike != '' ">
				and E.NODEDESC like #{descLike}
			</if>

			<if test="code != null and code != '' ">
				and E.CODE = #{code}
			</if>

			<if test="codeLike != null and codeLike != '' ">
				and E.CODE like #{codeLike}
			</if>

			<if test="codes != null and codes.size != 0">
				and E.CODE IN
				<foreach item="x_code" index="index" collection="codes"
					open="(" separator="," close=")">
					#{x_code}
				</foreach>
			</if>

			<if test="locked != null">
				and E.LOCKED = #{locked}
			</if>

		</where>

		<choose>
			<when test="orderBy != null">
				order by ${orderBy}
			</when>
			<otherwise>
				order by E.SORTNO asc
			</otherwise>
		</choose>
	</select>


	<select id="getMembershipUsers" resultMap="sysUserResultMap"
		parameterType="com.glaf.base.modules.sys.query.MembershipQuery">

		SELECT DISTINCT x.*
		FROM SYS_USER x

		<if test="roleId != null">
			INNER JOIN SYS_USER_ROLE userrole
			ON x.USERID = userrole.USERID
		</if>

		WHERE 1=1
		and x.DELETEFLAG = 0

		<if test="roleId != null">
			AND userrole.ROLEID = #{roleId}
		</if>

		<if test="nodeId != null">
			AND ( x.ORGANIZATIONID = #{nodeId} )
		</if>

		<if test="nodeIds != null and nodeIds.size !=0">
			AND x.ORGANIZATIONID IN
			<foreach item="x_nodeId" index="index" collection="nodeIds"
				open="(" separator="," close=")">
				#{x_nodeId}
			</foreach>
		</if>

		<if test="tenantId != null">
			AND ( x.TENANTID = #{tenantId} )
		</if>

	</select>


	<select id="getOrganizations" resultMap="sysOrganizationResultMap"
		parameterType="com.glaf.base.modules.sys.query.MembershipQuery">

		SELECT DISTINCT o.*
		FROM SYS_ORGANIZATION o

		WHERE 1=1
		and o.DELETEFLAG =
		0

		<if test="nodeId != null">
			AND ( o.ID = #{nodeId} )
		</if>

		<if test="nodeIds != null and nodeIds.size !=0">
			AND o.ID IN
			<foreach item="x_nodeId" index="index" collection="nodeIds"
				open="(" separator="," close=")">
				#{x_nodeId}
			</foreach>
		</if>

		<if test="tenantId != null">
			AND ( o.TENANTID = #{tenantId} )
		</if>

	</select>


	<select id="getOrganizationRoleUsers" resultMap="sysUserResultMap"
		parameterType="com.glaf.base.modules.sys.query.MembershipQuery">

		SELECT DISTINCT x.*
		FROM SYS_USER x

		<if test="roleId != null">
			INNER JOIN SYS_USER_ROLE userrole
			ON x.USERID = userrole.USERID
		</if>

		WHERE 1=1
		and x.DELETEFLAG = 0

		<if test="roleId != null">
			AND userrole.ROLEID = #{roleId}
		</if>

		<if test="nodeId != null">
			AND ( x.ORGANIZATIONID = #{nodeId} )
		</if>

		<if test="nodeIds != null and nodeIds.size !=0">
			AND x.ORGANIZATIONID IN
			<foreach item="x_nodeId" index="index" collection="nodeIds"
				open="(" separator="," close=")">
				#{x_nodeId}
			</foreach>
		</if>

		<if test="tenantId != null">
			AND ( x.TENANTID = #{tenantId} )
		</if>

	</select>


	<select id="getRoleById" resultMap="sysRoleResultMap"
		parameterType="string">

		SELECT r.*
		FROM SYS_ROLE r
		WHERE r.ID = #{roleId}

	</select>


	<select id="getRoleUsers" resultMap="sysUserResultMap"
		parameterType="string">

		SELECT x.*
		FROM SYS_USER x
		INNER JOIN SYS_USER_ROLE userrole
		ON
		x.USERID = userrole.USERID
		WHERE userrole.ROLEID = #{roleId}
		and x.DELETEFLAG = 0
		ORDER BY x.USERID ASC

	</select>


	<select id="getMyRoleUsers" resultMap="sysUserResultMap"
		parameterType="java.util.Map">

		SELECT DISTINCT x.*
		FROM SYS_USER x

		<if test="roleId != null">
			INNER JOIN SYS_USER_ROLE userrole
			ON x.USERID =
			userrole.USERID
		</if>

		WHERE 1=1
		and x.DELETEFLAG = 0

		<if test="roleId != null">
			AND userrole.ROLEID = #{roleId}
		</if>

		<if test="nodeId != null">
			AND ( x.ORGANIZATIONID = #{nodeId} )
		</if>

		<if test="nodeIds != null and nodeIds.size !=0">
			AND x.ORGANIZATIONID IN
			<foreach item="x_nodeId" index="index" collection="nodeIds"
				open="(" separator="," close=")">
				#{x_nodeId}
			</foreach>
		</if>

		<if test="tenantId != null">
			AND ( x.TENANTID = #{tenantId} )
		</if>

	</select>


	<select id="searchUsers" resultMap="sysUserResultMap"
		parameterType="string">

		SELECT x.*
		FROM SYS_USER x
		WHERE 1=1
		and x.DELETEFLAG = 0
		AND (
		x.USERID LIKE #{searchWord}
		OR
		x.USERNAME LIKE #{searchWord}
		OR
		x.EMAIL LIKE #{searchWord}
		OR
		x.MOBILE LIKE #{searchWord}
		)

		ORDER BY
		x.USERID ASC

	</select>


	<select id="getUsers" resultMap="sysUserResultMap"
		parameterType="com.glaf.core.query.UserQuery">

		SELECT x.*
		FROM SYS_USER x
		WHERE 1=1
		and x.DELETEFLAG = 0

		<choose>
			<when test="actorId != null">
				and x.USERID = #{actorId}
			</when>
			<when test="actorIds != null and actorIds.size !=0">
				and x.USERID IN
				<foreach item="x_actorId" index="index" collection="actorIds"
					open="(" separator="," close=")">
					#{x_actorId}
				</foreach>
			</when>
			<when test="organizationId != null">
				AND ( x.ORGANIZATIONID = #{organizationId} )
			</when>
			<when test="organizationIds != null and organizationIds.size !=0">
				AND x.ORGANIZATIONID IN
				<foreach item="x_organizationId" index="index" collection="organizationIds"
					open="(" separator="," close=")">
					#{x_organizationId}
				</foreach>
			</when>
			<otherwise>
			</otherwise>
		</choose>

		<if test="tenantId != null">
			AND ( x.TENANTID = #{tenantId} )
		</if>

		ORDER BY x.USERID ASC

	</select>


	<select id="getManagedTenantIds" resultType="string" parameterType="string">

		SELECT t.TENANTID_
		FROM SYS_TENANT_GRANT t
		WHERE t.GRANTEE_ = #{userId}
		union
		SELECT DISTINCT t.TENANTID_ from SYS_TENANT t
		INNER JOIN SYS_TREE_PERMISSION p
		ON t.AREAID_ = p.NODEID_
		where p.USERID_ = #{userId}

	</select>


	<select id="getUserById" resultMap="sysUserResultMap"
		parameterType="string">

		SELECT x.*
		FROM SYS_USER x
		WHERE x.USERID = #{actorId}

	</select>


	<select id="getTenantById" resultMap="sysTenantResultMap"
		parameterType="string">

		SELECT t.*
		FROM SYS_TENANT t
		WHERE t.TENANTID_ = #{tenantId}

	</select>


	<select id="getRoles" resultMap="sysRoleResultMap"
		parameterType="com.glaf.core.query.RoleQuery">

		SELECT r.ID, r.ROLENAME
		FROM SYS_ROLE r
		WHERE 1=1
		and r.DELETEFLAG = 0

		<if test="roleId != null">
			and ( r.ID = #{roleId} )
		</if>

		<if test="roleIds != null and roleIds.size !=0">
			and r.ID IN
			<foreach item="x_roleId" index="index" collection="roleIds"
				open="(" separator="," close=")">
				#{x_roleId}
			</foreach>
		</if>

	</select>


	<select id="getUserRoleCodes" resultType="string"
		parameterType="com.glaf.core.query.UserQuery">

		select distinct R.CODE from SYS_ROLE R
		inner join SYS_USER_ROLE UR
		on
		R.ID = UR.ROLEID
		where R.CODE is not null
		and R.DELETEFLAG = 0

		<choose>
			<when test="actorId != null">
				and UR.USERID = #{actorId}
			</when>
			<when test="actorIds != null and actorIds.size !=0">
				and UR.USERID IN
				<foreach item="x_actorId" index="index" collection="actorIds"
					open="(" separator="," close=")">
					#{x_actorId}
				</foreach>
			</when>
			<otherwise>
				and 1=0
			</otherwise>
		</choose>

		union

		select E.CODE from SYS_APPLICATION E
		inner join SYS_APP_ACCESS A
		on E.ID =
		A.APPID
		where E.CODE is not null
		and A.ROLEID in (
		select UR.ID
		from SYS_USER_ROLE UR
		where 1=1

		<choose>
			<when test="actorId != null">
				and UR.USERID = #{actorId}
			</when>
			<when test="actorIds != null and actorIds.size !=0">
				and UR.USERID IN
				<foreach item="x_actorId" index="index" collection="actorIds"
					open="(" separator="," close=")">
					#{x_actorId}
				</foreach>
			</when>
			<otherwise>
				and 1=0
			</otherwise>
		</choose>
		)

	</select>


	<select id="selectGroups" resultMap="groupResultMap"
		parameterType="com.glaf.core.query.GroupQuery">

		SELECT g.*
		FROM SYS_GROUP g
		WHERE 1=1

		<if test="groupId != null">
			and ( g.GROUPID = #{groupId} )
		</if>

		<if test="groupIds != null and groupIds.size != 0">
			and g.GROUPID IN
			<foreach item="x_groupId" index="index" collection="groupIds"
				open="(" separator="," close=")">
				#{x_groupId}
			</foreach>
		</if>

		<if test="tenantId != null">
			AND ( g.TENANTID = #{tenantId} )
		</if>

	</select>

</mapper>