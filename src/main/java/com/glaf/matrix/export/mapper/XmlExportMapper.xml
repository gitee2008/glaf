<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.glaf.matrix.export.mapper.XmlExportMapper">

	<resultMap id="xmlExportResultMap"
		type="com.glaf.matrix.export.domain.XmlExport">
		<id property="id" column="ID_" jdbcType="VARCHAR" />
		<result property="nodeId" column="NODEID_" jdbcType="BIGINT" />
		<result property="nodeParentId" column="NODEPARENTID_"
			jdbcType="BIGINT" />
		<result property="name" column="NAME_" jdbcType="VARCHAR" />
		<result property="mapping" column="MAPPING_" jdbcType="VARCHAR" />
		<result property="title" column="TITLE_" jdbcType="VARCHAR" />
		<result property="sql" column="SQL_" jdbcType="VARCHAR" />
		<result property="resultFlag" column="RESULTFLAG_"
			jdbcType="VARCHAR" />
		<result property="leafFlag" column="LEAFFLAG_"
			jdbcType="VARCHAR" />
		<result property="treeFlag" column="TREEFLAG_"
			jdbcType="VARCHAR" />
		<result property="type" column="TYPE_" jdbcType="VARCHAR" />
		<result property="xmlTag" column="XMLTAG_" jdbcType="VARCHAR" />
		<result property="templateId" column="TEMPLATEID_"
			jdbcType="VARCHAR" />
		<result property="externalAttrsFlag"
			column="EXTERNALATTRSFLAG_" jdbcType="VARCHAR" />
		<result property="allowRoles" column="ALLOWROLES_"
			jdbcType="VARCHAR" />
		<result property="interval" column="INTERVAL_"
			jdbcType="INTEGER" />
		<result property="sortNo" column="SORTNO_" jdbcType="INTEGER" />
		<result property="active" column="ACTIVE_" jdbcType="VARCHAR" />
		<result property="createBy" column="CREATEBY_"
			jdbcType="VARCHAR" />
		<result property="createTime" column="CREATETIME_"
			jdbcType="TIMESTAMP" />
		<result property="updateBy" column="UPDATEBY_"
			jdbcType="VARCHAR" />
		<result property="updateTime" column="UPDATETIME_"
			jdbcType="TIMESTAMP" />
	</resultMap>


	<insert id="insertXmlExport"
		parameterType="com.glaf.matrix.export.domain.XmlExport">
		insert into SYS_XML_EXPORT
		<trim prefix="(" suffix=")" suffixOverrides=",">
			ID_
			<if test="nodeId != null">
				,NODEID_
			</if>
			<if test="nodeParentId != null">
				,NODEPARENTID_
			</if>
			<if test="name != null">
				,NAME_
			</if>
			<if test="mapping != null">
				,MAPPING_
			</if>
			<if test="title != null">
				,TITLE_
			</if>
			<if test="sql != null">
				,SQL_
			</if>
			<if test="resultFlag != null">
				,RESULTFLAG_
			</if>
			<if test="leafFlag != null">
				,LEAFFLAG_
			</if>
			<if test="treeFlag != null">
				,TREEFLAG_
			</if>
			<if test="type != null">
				,TYPE_
			</if>
			<if test="xmlTag != null">
				,XMLTAG_
			</if>
			<if test="templateId != null">
				,TEMPLATEID_
			</if>
			<if test="externalAttrsFlag != null">
				,EXTERNALATTRSFLAG_
			</if>
			<if test="allowRoles != null">
				,ALLOWROLES_
			</if>
			<if test="interval != null">
				,INTERVAL_
			</if>
			<if test="sortNo != null">
				,SORTNO_
			</if>
			<if test="active != null">
				,ACTIVE_
			</if>
			<if test="createBy != null">
				,CREATEBY_
			</if>
			<if test="createTime != null">
				,CREATETIME_
			</if>
			<if test="updateBy != null">
				,UPDATEBY_
			</if>
			<if test="updateTime != null">
				,UPDATETIME_
			</if>
		</trim>

		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			#{id, jdbcType=VARCHAR}

			<if test="nodeId != null">
				,#{nodeId, jdbcType=BIGINT}
			</if>
			<if test="nodeParentId != null">
				,#{nodeParentId, jdbcType=BIGINT}
			</if>
			<if test="name != null">
				,#{name, jdbcType=VARCHAR}
			</if>
			<if test="mapping != null">
				,#{mapping, jdbcType=VARCHAR}
			</if>
			<if test="title != null">
				,#{title, jdbcType=VARCHAR}
			</if>
			<if test="sql != null">
				,#{sql, jdbcType=VARCHAR}
			</if>
			<if test="resultFlag != null">
				,#{resultFlag, jdbcType=VARCHAR}
			</if>
			<if test="leafFlag != null">
				,#{leafFlag, jdbcType=VARCHAR}
			</if>
			<if test="treeFlag != null">
				,#{treeFlag, jdbcType=VARCHAR}
			</if>
			<if test="type != null">
				,#{type, jdbcType=VARCHAR}
			</if>
			<if test="xmlTag != null">
				,#{xmlTag, jdbcType=VARCHAR}
			</if>
			<if test="templateId != null">
				,#{templateId, jdbcType=VARCHAR}
			</if>
			<if test="externalAttrsFlag != null">
				,#{externalAttrsFlag, jdbcType=VARCHAR}
			</if>
			<if test="allowRoles != null">
				,#{allowRoles, jdbcType=VARCHAR}
			</if>
			<if test="interval != null">
				,#{interval, jdbcType=INTEGER}
			</if>
			<if test="sortNo != null">
				,#{sortNo, jdbcType=INTEGER}
			</if>
			<if test="active != null">
				,#{active, jdbcType=VARCHAR}
			</if>
			<if test="createBy != null">
				,#{createBy, jdbcType=VARCHAR}
			</if>
			<if test="createTime != null">
				,#{createTime, jdbcType=TIMESTAMP}
			</if>
			<if test="updateBy != null">
				,#{updateBy, jdbcType=VARCHAR}
			</if>
			<if test="updateTime != null">
				,#{updateTime, jdbcType=TIMESTAMP}
			</if>
		</trim>
	</insert>


	<update id="updateXmlExport"
		parameterType="com.glaf.matrix.export.domain.XmlExport">
		update SYS_XML_EXPORT
		set
		<trim prefix="" suffix="" suffixOverrides=",">
			<if test="nodeParentId != null">
				NODEPARENTID_ = #{nodeParentId, jdbcType=BIGINT},
			</if>
			<if test="name != null">
				NAME_ = #{name, jdbcType=VARCHAR},
			</if>
			<if test="mapping != null">
				MAPPING_ = #{mapping, jdbcType=VARCHAR},
			</if>
			<if test="title != null">
				TITLE_ = #{title, jdbcType=VARCHAR},
			</if>
			<if test="sql != null">
				SQL_ = #{sql, jdbcType=VARCHAR},
			</if>
			<if test="resultFlag != null">
				RESULTFLAG_ = #{resultFlag, jdbcType=VARCHAR},
			</if>
			<if test="leafFlag != null">
				LEAFFLAG_ = #{leafFlag, jdbcType=VARCHAR},
			</if>
			<if test="treeFlag != null">
				TREEFLAG_ = #{treeFlag, jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				TYPE_ = #{type, jdbcType=VARCHAR},
			</if>
			<if test="active != null">
				ACTIVE_ = #{active, jdbcType=VARCHAR},
			</if>
			<if test="xmlTag != null">
				XMLTAG_ = #{xmlTag, jdbcType=VARCHAR},
			</if>
			<if test="templateId != null">
				TEMPLATEID_ = #{templateId, jdbcType=VARCHAR},
			</if>
			<if test="externalAttrsFlag != null">
				EXTERNALATTRSFLAG_ = #{externalAttrsFlag,
				jdbcType=VARCHAR},
			</if>
			<if test="allowRoles != null">
				ALLOWROLES_ = #{allowRoles, jdbcType=VARCHAR},
			</if>
			<if test="interval != null">
				INTERVAL_ = #{interval, jdbcType=INTEGER},
			</if>
			<if test="sortNo != null">
				SORTNO_ = #{sortNo, jdbcType=INTEGER},
			</if>
			<if test="updateBy != null">
				UPDATEBY_ = #{updateBy, jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				UPDATETIME_ = #{updateTime, jdbcType=TIMESTAMP},
			</if>
		</trim>
		where
		ID_ = #{id, jdbcType=BIGINT}

	</update>


	<delete id="deleteXmlExportById" parameterType="string">
		delete from
		SYS_XML_EXPORT
		where ID_ = #{id}
	</delete>


	<select id="getXmlExportById" parameterType="string"
		resultMap="xmlExportResultMap">
		select * from SYS_XML_EXPORT where ID_ = #{id}
	</select>


	<select id="getXmlExportByNodeId" parameterType="long"
		resultMap="xmlExportResultMap">
		select * from SYS_XML_EXPORT where NODEID_ = #{nodeId}
	</select>


	<select id="getChildrenXmlExports" parameterType="long"
		resultMap="xmlExportResultMap">
		select * from SYS_XML_EXPORT
		where NODEPARENTID_ =
		#{nodeParentId}
		and ACTIVE_ = 'Y'
		order by SORTNO_ asc
	</select>


	<select id="getXmlExports"
		parameterType="com.glaf.matrix.export.query.XmlExportQuery"
		resultMap="xmlExportResultMap">
		select distinct E.*
		<include refid="selectXmlExportsSql" />
		<choose>
			<when test="orderBy != null">
				order by ${orderBy}
			</when>
			<otherwise>
				order by E.SORTNO_ asc
			</otherwise>
		</choose>
	</select>


	<select id="getXmlExportCount"
		parameterType="com.glaf.matrix.export.query.XmlExportQuery"
		resultType="int">
		select count(*)
		<include refid="selectXmlExportsSql" />
	</select>


	<sql id="selectXmlExportsSql">

		from SYS_XML_EXPORT E

		<where>
			1 = 1

			<if test="nodeIds != null and nodeIds.size() &gt; 0">
				and E.NODEID_ IN
				<foreach item="x_nodeId" index="index" collection="nodeIds"
					open="(" separator="," close=")">
					#{x_nodeId}
				</foreach>
			</if>

			<if test="nodeParentId != null and nodeParentId != '' ">
				and E.NODEPARENTID_ = #{nodeParentId}
			</if>

			<if test="nodeParentIds != null and nodeParentIds.size() &gt; 0">
				and E.NODEPARENTID_ IN
				<foreach item="x_nodeParentId" index="index"
					collection="nodeParentIds" open="(" separator="," close=")">
					#{x_nodeParentId}
				</foreach>
			</if>

			<if test="titleLike != null and titleLike != '' ">
				and E.TITLE_ like #{titleLike}
			</if>

			<if test="type != null and type != '' ">
				and E.TYPE_ = #{type}
			</if>

			<if test="active != null and active != '' ">
				and E.ACTIVE_ = #{active}
			</if>

			<if test="createBy != null and createBy != '' ">
				and E.CREATEBY_ = #{createBy}
			</if>

			<if test="createTimeGreaterThanOrEqual != null">
				and E.CREATETIME_ &gt;= #{createTimeGreaterThanOrEqual}
			</if>

			<if test="createTimeLessThanOrEqual != null">
				and E.CREATETIME_ &lt;= #{createTimeLessThanOrEqual}
			</if>

			<if test="updateBy != null and updateBy != '' ">
				and E.UPDATEBY_ = #{updateBy}
			</if>

			<if test="updateTimeGreaterThanOrEqual != null">
				and E.UPDATETIME_ &gt;= #{updateTimeGreaterThanOrEqual}
			</if>

			<if test="updateTimeLessThanOrEqual != null">
				and E.UPDATETIME_ &lt;= #{updateTimeLessThanOrEqual}
			</if>

		</where>
	</sql>

</mapper>